@model  PagedList.IPagedList<Ghostly.Models.RecipeModel>

@{
    ViewBag.Title = "GetAllRecipe";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />
<link href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet">

<h2>List of Recipe</h2>
@using PagedList;
@using PagedList.Mvc;
<p>
    @Html.ActionLink("Create New", "AddRecipe")
</p>
@using (Html.BeginForm("GetAllRecipe", "Home", FormMethod.Get))
{
    <p>
        ProductName: @Html.TextBox("Search_Data", ViewBag.FilterValue as string)
        <input type="submit" value="Find" />
    </p>
}
<table class="table" id="Recipe">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().RecipeId)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Variation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CurrentPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().LastCost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().StandardRecipeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().OperatorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().OperatorLocationId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().date_creation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().created_by)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().modified_by)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().date_modified)
        </th>
        <th></th>
    </tr>

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="3" style="color:red">
                No Match Any Document
            </td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RecipeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Variation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StandardRecipeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OperatorId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OperatorLocationId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.date_creation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.created_by)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.modified_by)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.date_modified)
                </td>


                <td>
                    @Html.ActionLink("Edit", "Update", new { id = item.RecipeId }, new { @class = "fa fa-pencil btn btn-primary" })
                </td>

                <td>

                    @Html.ActionLink("Details", "Detail", new { id = item.RecipeId }, new { @class = " btn btn-primary" })
                </td>
                <td>

                    @Html.ActionLink("Delete", "Delete", new { id = item.RecipeId }, new { @class = " btn btn-danger" })


                </td>

            </tr>
        }
    }

</table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, Page_No => Url.Action("GetAllRecipe",
    new { Page_No, Sorting_Order = ViewBag.CurrentSortOrder, Filter_Value = ViewBag.FilterValue }))

